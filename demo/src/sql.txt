CREATE TABLE IF NOT EXISTS user (
    id INTEGER PRIMARY KEY AUTO_INCREMENT,
    username VARCHAR(255) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL,
    role ENUM('Manager', 'Staff') NOT NULL
);

CREATE TABLE IF NOT EXISTS customer (
    id INTEGER PRIMARY KEY AUTO_INCREMENT,
    room_id INTEGER,
    name VARCHAR(255) NOT NULL,
    gender ENUM('Male', 'Female', 'Other') DEFAULT 'Other',
    birthday DATE NOT NULL,
    identification VARCHAR(20) NOT NULL UNIQUE,
    hometown VARCHAR(255) NOT NULL,
    rent_date DATE,
);

CREATE TABLE IF NOT EXISTS employee (
    id INTEGER PRIMARY KEY AUTO_INCREMENT,
    user_id INTEGER,
    name VARCHAR(255) NOT NULL,
    hometown VARCHAR(255) NOT NULL,
    identification VARCHAR(20) NOT NULL UNIQUE,
    birthday DATE NOT NULL,
    gender ENUM('Male', 'Female', 'Other') DEFAULT 'Other',
    position ENUM('Manager', 'Staff') NOT NULL,
    salary INTEGER,
    FOREIGN KEY (user_id) REFERENCES user(id)
);

CREATE TABLE IF NOT EXISTS service (
    name VARCHAR(255) PRIMARY KEY NOT NULL,
    cost INTEGER NOT NULL
);

CREATE TABLE IF NOT EXISTS room (
    id INTEGER PRIMARY KEY AUTO_INCREMENT,
    renter_id INTEGER,
    is_rented BOOLEAN DEFAULT FALSE,
    rent_date DATE,
    departure_date DATE,
    price INTEGER NOT NULL DEFAULT 0,
    bill_id INTEGER,
    FOREIGN KEY (renter_id) REFERENCES customer(id)
);

CREATE TABLE IF NOT EXISTS room_service (
    room_id INTEGER,
    service_name VARCHAR(255),
    PRIMARY KEY (room_id, service_name),
    FOREIGN KEY (room_id) REFERENCES room(id),
    FOREIGN KEY (service_name) REFERENCES service(name)
);


CREATE TABLE IF NOT EXISTS bill (
    id INTEGER PRIMARY KEY AUTO_INCREMENT,
    room_id INTEGER,
    price INTEGER NOT NULL DEFAULT 0,
    FOREIGN KEY (room_id) REFERENCES room(id)
);


ALTER TABLE room
ADD CONSTRAINT fk_room_bill FOREIGN KEY (bill_id) REFERENCES bill(id);
ALTER TABLE customer
ADD CONSTRAINT fk_customer_room FOREIGN KEY (room_id) REFERENCES room(id);
