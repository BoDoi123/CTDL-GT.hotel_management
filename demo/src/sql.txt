CREATE TABLE IF NOT EXISTS User (
    id INTEGER PRIMARY KEY AUTO_INCREMENT,
    username VARCHAR(50) NOT NULL UNIQUE,
    password VARCHAR(50) NOT NULL,
    role ENUM('Manager', 'Staff', 'Customer') NOT NULL
);

CREATE TABLE IF NOT EXISTS Customer (
    id INTEGER PRIMARY KEY AUTO_INCREMENT,
    userID INTEGER,
    name VARCHAR(255) NOT NULL,
    gender ENUM('Male', 'Female', 'Other') DEFAULT 'Other',
    birthday DATE NOT NULL,
    identification VARCHAR(20) NOT NULL UNIQUE,
    hometown VARCHAR(255) NOT NULL,
    rentDate DATE,
    FOREIGN KEY (userID) REFERENCES User(id)
);

CREATE TABLE IF NOT EXISTS Employee (
    id INTEGER PRIMARY KEY AUTO_INCREMENT,
    userID INTEGER,
    name VARCHAR(255) NOT NULL,
    hometown VARCHAR(255) NOT NULL,
    identification VARCHAR(20) NOT NULL UNIQUE,
    birthday DATE NOT NULL,
    gender ENUM('Male', 'Female', 'Other') DEFAULT 'Other',
    position ENUM('Manager', 'Staff') NOT NULL,
    salary INTEGER,
    FOREIGN KEY (userID) REFERENCES User(id)
);

CREATE TABLE IF NOT EXISTS Service (
    name VARCHAR(255) PRIMARY KEY NOT NULL,
    cost INTEGER NOT NULL
);

CREATE TABLE IF NOT EXISTS Room (
    id INTEGER PRIMARY KEY AUTO_INCREMENT,
    renterID INTEGER,
    isRented BOOLEAN,
    renDate DATE,
    orderDate DATE,
    price INTEGER NOT NULL,
    billID INTEGER,
    FOREIGN KEY (renterID) REFERENCES Customer(id),
);

CREATE TABLE IF NOT EXISTS RoomService (
    roomID INTEGER,
    serviceName VARCHAR(255),
    PRIMARY KEY (roomID, serviceName),
    FOREIGN KEY (roomID) REFERENCES Room(id),
    FOREIGN KEY (serviceName) REFERENCES Service(name)
);


CREATE TABLE IF NOT EXISTS Bill (
    id INTEGER PRIMARY KEY AUTO_INCREMENT,
    roomID INTEGER,
    FOREIGN KEY (roomID) REFERENCES Room(id)
);

CREATE TABLE IF NOT EXISTS BillService (
    billID INTEGER,
    serviceName VARCHAR(255),
    PRIMARY KEY (billID, serviceName),
    FOREIGN KEY (billID) REFERENCES Bill(id),
    FOREIGN KEY (serviceName) REFERENCES Service(name)
);


ALTER TABLE Room
ADD CONSTRAINT fk_room_bill FOREIGN KEY (billID) REFERENCES Bill(id);
